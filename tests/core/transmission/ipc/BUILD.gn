# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../dsoftbus.gni")

module_output_path = "dsoftbus/transmission"
dsoftbus_root_path = "../../../.."

ohos_unittest("TransClientProxyTest") {
  module_out_path = module_output_path
  sources = [ "trans_client_proxy_test.cpp" ]

  include_dirs = [
    "$dsoftbus_root_path/core/common/include",
    "$dsoftbus_root_path/core/frame/common/include",
    "$dsoftbus_root_path/core/transmission/common/include",
    "$dsoftbus_root_path/core/transmission/ipc/include",
    "$dsoftbus_root_path/core/transmission/ipc/standard/include",
    "$dsoftbus_root_path/core/frame/standard/init/include",
    "$dsoftbus_root_path/core/frame/standard/client_manager/include",
    "$dsoftbus_root_path/adapter/common/include",
    "$dsoftbus_root_path/sdk/frame/standard/include",
  ]

  deps = [
    "$dsoftbus_root_path/core/common:softbus_utils",
    "$dsoftbus_root_path/core/frame:softbus_server",
  ]

  if (is_standard_system) {
    external_deps = [ "hilog:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [
    "c_utils:utils",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("TransClientProxyStandardTest") {
  module_out_path = module_output_path
  sources = [ "trans_client_proxy_standard_test.cpp" ]

  include_dirs = [
    "$dsoftbus_root_path/core/common/include",
    "$dsoftbus_root_path/core/frame/common/include",
    "$dsoftbus_root_path/core/transmission/common/include",
    "$dsoftbus_root_path/core/transmission/ipc/include",
    "$dsoftbus_root_path/core/transmission/ipc/standard/include",
    "$dsoftbus_root_path/core/frame/standard/init/include",
    "$dsoftbus_root_path/core/frame/standard/client_manager/include",
    "$dsoftbus_root_path/adapter/common/include",
    "$dsoftbus_root_path/sdk/frame/standard/include",
    "//foundation/window/window_manager/previewer/mock",
  ]

  deps = [
    "$dsoftbus_root_path/core/common:softbus_utils",
    "$dsoftbus_root_path/core/frame:softbus_server",
  ]

  if (is_standard_system) {
    external_deps = [ "hilog:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  external_deps += [
    "c_utils:utils",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]
}

group("unittest") {
  testonly = true
  deps = [
    ":TransClientProxyStandardTest",
    ":TransClientProxyTest",
  ]
}
